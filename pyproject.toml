[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cubes"
version = "2.0"
description = "Lightweight framework for Online Analytical Processing (OLAP) and multidimensional analysis"
readme = "README.rst"
requires-python = ">=3.11"
license = {text = "MIT license with following addition: If your version of the Software supports interaction with it remotely through a computer network, the above copyright notice and this permission notice shall be accessible to all users."}
authors = [
    {name = "Stefan Urbanek", email = "stefan.urbanek@gmail.com"}
]
keywords = ["olap", "multidimensional", "data", "analysis"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "Topic :: Utilities"
]
dependencies = [
    "python-dateutil",
    "jsonschema",
    "expressions>=0.2.3",
    "setuptools",
    "marimo>=0.14.12",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
sql = ["sqlalchemy>=2.0.0"]
slicer = ["werkzeug"]
html = ["jinja2"]
all = ["cubes[sql,slicer,html]"]
dev = ["cubes[all]", "sphinx", "ruff"]

[project.urls]
Homepage = "http://cubes.databrewery.org"

[project.scripts]
slicer = "cubes.slicer.commands:main"

[tool.setuptools.packages.find]
exclude = ["*.tests", "*.tests.*", "tests.*", "tests"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.rst"]
cubes = ["templates/*.html", "templates/*.js", "schemas/*.json"]
"cubes.server" = ["templates/*.html"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
